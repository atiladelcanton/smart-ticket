version: '3.8'

services:
  # Servi√ßo PHP
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: smart-ticket-php
    container_name: smart-ticket-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - smart-ticket-network
    depends_on:
      - mysql
      - redis

  # Servidor Web (Nginx)
  webserver:
    image: nginx:alpine
    container_name: smart-ticket-webserver
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - smart-ticket-network
    depends_on:
      - app

  # Banco de Dados MySQL
  mysql:
    image: mysql:8.0
    container_name: smart-ticket-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: smart_ticket
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
      MYSQL_USER: smart_ticket
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - smart-ticket-network

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: smart-ticket-phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: secret
    networks:
      - smart-ticket-network
    depends_on:
      - mysql

  # Redis
  redis:
    image: redis:7-alpine
    container_name: smart-ticket-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - smart-ticket-network

  # Mailhog (para testes de email)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: smart-ticket-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - smart-ticket-network

networks:
  smart-ticket-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
